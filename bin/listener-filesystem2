#!usr/bin/env php
<?php

require_once(__DIR__ . '/../app.php');

$pubsub = $redis->pubSubLoop();
$pubsub->subscribe('filesystem');

foreach ($pubsub as $message) {
    if ($message->kind !== 'message') {
        continue;
    }

    echo "Received: " . md5($message->payload) . PHP_EOL;

    if (isBinary($message->payload)) {
        $readBuffer = [...unpack('C*', $message->payload)];
        $dataLength = count($readBuffer);

        echo "Received: " . var_dump($readBuffer) . PHP_EOL;
        echo "BinÃ¡rio" . PHP_EOL;
    
    } else {
        if (substr($row, 0, 2) === "F8") {
                
            echo "Received: " . var_dump($message->payload) . PHP_EOL;
            echo "Hexadecimal" . PHP_EOL;

        } else {
            echo "Received: " . var_dump($message->payload) . PHP_EOL;
            echo "Text" . PHP_EOL;
        }
    }
}


function isBinary($str)
{
    return preg_match('~[^\x20-\x7E\t\r\n]~', $str) > 0;
}

function separtedBinarieFiles(array $bytesArray)
{
    $arraySeparated = [];
    $count = 0;
    $length = count($bytesArray);
    for ($i=0; $i < $length; $i++) {
        if ($i == 0) {
            $arraySeparated[$count][] = $bytesArray[$i];
            continue;
        }

        if ($i == $length) {
            $arraySeparated[$count][] = $bytesArray[$i];
            continue;
        }

        if ($bytesArray[$i - 1] == 248 && $bytesArray[$i] == 248) {
            $count++;
            $arraySeparated[$count][] = $bytesArray[$i];
            continue;
        }

        $arraySeparated[$count][] = $bytesArray[$i];
    }

    return $arraySeparated;
}